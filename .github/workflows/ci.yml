name: CI

on:
  push:

jobs:
  lint-and-typecheck:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build shared package
      run: |
        cd packages/shared
        npm run build
      
    - name: Run ESLint
      run: npm run lint
      
    - name: TypeScript check - API
      run: |
        cd apps/api
        npx tsc --noEmit
        
    - name: TypeScript check - Mobile
      run: |
        cd apps/mobile
        npx tsc --noEmit
        
    - name: TypeScript check - Shared
      run: |
        cd packages/shared
        npx tsc --noEmit

  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build shared package
      run: |
        cd packages/shared
        npm run build
      
    - name: Run tests
      run: npm test

  docker-and-e2e-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build shared package
      run: |
        cd packages/shared
        npm run build
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build docker-compose services
      run: |
        export DOCKER_BUILDKIT=1
        export COMPOSE_DOCKER_CLI_BUILD=1
        docker compose build
      
    - name: Start services
      run: docker compose up -d
      
    - name: Wait for services to start
      run: sleep 15
      
    - name: Check API health
      run: |
        curl -f http://localhost:3000/health || exit 1
        
    - name: Install Playwright browsers
      run: |
        cd apps/mobile
        npx playwright install --with-deps chromium
        
    - name: Run E2E tests against containers
      run: |
        cd apps/mobile
        SKIP_WEBSERVER=true npm run test:e2e
        
    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: apps/mobile/e2e/playwright-report/
        retention-days: 30
        
    - name: Stop services
      if: always()
      run: docker compose down